"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/cheerio-select";
exports.ids = ["vendor-chunks/cheerio-select"];
exports.modules = {

/***/ "(rsc)/./node_modules/cheerio-select/lib/helpers.js":
/*!****************************************************!*\
  !*** ./node_modules/cheerio-select/lib/helpers.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.groupSelectors = exports.getDocumentRoot = void 0;\nvar positionals_js_1 = __webpack_require__(/*! ./positionals.js */ \"(rsc)/./node_modules/cheerio-select/lib/positionals.js\");\nfunction getDocumentRoot(node) {\n    while (node.parent)\n        node = node.parent;\n    return node;\n}\nexports.getDocumentRoot = getDocumentRoot;\nfunction groupSelectors(selectors) {\n    var filteredSelectors = [];\n    var plainSelectors = [];\n    for (var _i = 0, selectors_1 = selectors; _i < selectors_1.length; _i++) {\n        var selector = selectors_1[_i];\n        if (selector.some(positionals_js_1.isFilter)) {\n            filteredSelectors.push(selector);\n        }\n        else {\n            plainSelectors.push(selector);\n        }\n    }\n    return [plainSelectors, filteredSelectors];\n}\nexports.groupSelectors = groupSelectors;\n//# sourceMappingURL=helpers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvY2hlZXJpby1zZWxlY3QvbGliL2hlbHBlcnMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsc0JBQXNCLEdBQUcsdUJBQXVCO0FBQ2hELHVCQUF1QixtQkFBTyxDQUFDLGdGQUFrQjtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBLDhDQUE4Qyx5QkFBeUI7QUFDdkU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0I7QUFDdEIiLCJzb3VyY2VzIjpbIi9ob21lL2ltdGl5YXovRGVza3RvcC9TdXBlckxlYXJuL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9jaGVlcmlvLXNlbGVjdC9saWIvaGVscGVycy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZ3JvdXBTZWxlY3RvcnMgPSBleHBvcnRzLmdldERvY3VtZW50Um9vdCA9IHZvaWQgMDtcbnZhciBwb3NpdGlvbmFsc19qc18xID0gcmVxdWlyZShcIi4vcG9zaXRpb25hbHMuanNcIik7XG5mdW5jdGlvbiBnZXREb2N1bWVudFJvb3Qobm9kZSkge1xuICAgIHdoaWxlIChub2RlLnBhcmVudClcbiAgICAgICAgbm9kZSA9IG5vZGUucGFyZW50O1xuICAgIHJldHVybiBub2RlO1xufVxuZXhwb3J0cy5nZXREb2N1bWVudFJvb3QgPSBnZXREb2N1bWVudFJvb3Q7XG5mdW5jdGlvbiBncm91cFNlbGVjdG9ycyhzZWxlY3RvcnMpIHtcbiAgICB2YXIgZmlsdGVyZWRTZWxlY3RvcnMgPSBbXTtcbiAgICB2YXIgcGxhaW5TZWxlY3RvcnMgPSBbXTtcbiAgICBmb3IgKHZhciBfaSA9IDAsIHNlbGVjdG9yc18xID0gc2VsZWN0b3JzOyBfaSA8IHNlbGVjdG9yc18xLmxlbmd0aDsgX2krKykge1xuICAgICAgICB2YXIgc2VsZWN0b3IgPSBzZWxlY3RvcnNfMVtfaV07XG4gICAgICAgIGlmIChzZWxlY3Rvci5zb21lKHBvc2l0aW9uYWxzX2pzXzEuaXNGaWx0ZXIpKSB7XG4gICAgICAgICAgICBmaWx0ZXJlZFNlbGVjdG9ycy5wdXNoKHNlbGVjdG9yKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHBsYWluU2VsZWN0b3JzLnB1c2goc2VsZWN0b3IpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBbcGxhaW5TZWxlY3RvcnMsIGZpbHRlcmVkU2VsZWN0b3JzXTtcbn1cbmV4cG9ydHMuZ3JvdXBTZWxlY3RvcnMgPSBncm91cFNlbGVjdG9ycztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWhlbHBlcnMuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/cheerio-select/lib/helpers.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/cheerio-select/lib/index.js":
/*!**************************************************!*\
  !*** ./node_modules/cheerio-select/lib/index.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.select = exports.filter = exports.some = exports.is = exports.aliases = exports.pseudos = exports.filters = void 0;\nvar css_what_1 = __webpack_require__(/*! css-what */ \"(rsc)/./node_modules/css-what/lib/es/index.js\");\nvar css_select_1 = __webpack_require__(/*! css-select */ \"(rsc)/./node_modules/css-select/lib/index.js\");\nvar DomUtils = __importStar(__webpack_require__(/*! domutils */ \"(rsc)/./node_modules/domutils/lib/index.js\"));\nvar boolbase = __importStar(__webpack_require__(/*! boolbase */ \"(rsc)/./node_modules/boolbase/index.js\"));\nvar helpers_js_1 = __webpack_require__(/*! ./helpers.js */ \"(rsc)/./node_modules/cheerio-select/lib/helpers.js\");\nvar positionals_js_1 = __webpack_require__(/*! ./positionals.js */ \"(rsc)/./node_modules/cheerio-select/lib/positionals.js\");\n// Re-export pseudo extension points\nvar css_select_2 = __webpack_require__(/*! css-select */ \"(rsc)/./node_modules/css-select/lib/index.js\");\nObject.defineProperty(exports, \"filters\", ({ enumerable: true, get: function () { return css_select_2.filters; } }));\nObject.defineProperty(exports, \"pseudos\", ({ enumerable: true, get: function () { return css_select_2.pseudos; } }));\nObject.defineProperty(exports, \"aliases\", ({ enumerable: true, get: function () { return css_select_2.aliases; } }));\nvar UNIVERSAL_SELECTOR = {\n    type: css_what_1.SelectorType.Universal,\n    namespace: null,\n};\nvar SCOPE_PSEUDO = {\n    type: css_what_1.SelectorType.Pseudo,\n    name: \"scope\",\n    data: null,\n};\nfunction is(element, selector, options) {\n    if (options === void 0) { options = {}; }\n    return some([element], selector, options);\n}\nexports.is = is;\nfunction some(elements, selector, options) {\n    if (options === void 0) { options = {}; }\n    if (typeof selector === \"function\")\n        return elements.some(selector);\n    var _a = (0, helpers_js_1.groupSelectors)((0, css_what_1.parse)(selector)), plain = _a[0], filtered = _a[1];\n    return ((plain.length > 0 && elements.some((0, css_select_1._compileToken)(plain, options))) ||\n        filtered.some(function (sel) { return filterBySelector(sel, elements, options).length > 0; }));\n}\nexports.some = some;\nfunction filterByPosition(filter, elems, data, options) {\n    var num = typeof data === \"string\" ? parseInt(data, 10) : NaN;\n    switch (filter) {\n        case \"first\":\n        case \"lt\":\n            // Already done in `getLimit`\n            return elems;\n        case \"last\":\n            return elems.length > 0 ? [elems[elems.length - 1]] : elems;\n        case \"nth\":\n        case \"eq\":\n            return isFinite(num) && Math.abs(num) < elems.length\n                ? [num < 0 ? elems[elems.length + num] : elems[num]]\n                : [];\n        case \"gt\":\n            return isFinite(num) ? elems.slice(num + 1) : [];\n        case \"even\":\n            return elems.filter(function (_, i) { return i % 2 === 0; });\n        case \"odd\":\n            return elems.filter(function (_, i) { return i % 2 === 1; });\n        case \"not\": {\n            var filtered_1 = new Set(filterParsed(data, elems, options));\n            return elems.filter(function (e) { return !filtered_1.has(e); });\n        }\n    }\n}\nfunction filter(selector, elements, options) {\n    if (options === void 0) { options = {}; }\n    return filterParsed((0, css_what_1.parse)(selector), elements, options);\n}\nexports.filter = filter;\n/**\n * Filter a set of elements by a selector.\n *\n * Will return elements in the original order.\n *\n * @param selector Selector to filter by.\n * @param elements Elements to filter.\n * @param options Options for selector.\n */\nfunction filterParsed(selector, elements, options) {\n    if (elements.length === 0)\n        return [];\n    var _a = (0, helpers_js_1.groupSelectors)(selector), plainSelectors = _a[0], filteredSelectors = _a[1];\n    var found;\n    if (plainSelectors.length) {\n        var filtered = filterElements(elements, plainSelectors, options);\n        // If there are no filters, just return\n        if (filteredSelectors.length === 0) {\n            return filtered;\n        }\n        // Otherwise, we have to do some filtering\n        if (filtered.length) {\n            found = new Set(filtered);\n        }\n    }\n    for (var i = 0; i < filteredSelectors.length && (found === null || found === void 0 ? void 0 : found.size) !== elements.length; i++) {\n        var filteredSelector = filteredSelectors[i];\n        var missing = found\n            ? elements.filter(function (e) { return DomUtils.isTag(e) && !found.has(e); })\n            : elements;\n        if (missing.length === 0)\n            break;\n        var filtered = filterBySelector(filteredSelector, elements, options);\n        if (filtered.length) {\n            if (!found) {\n                /*\n                 * If we haven't found anything before the last selector,\n                 * just return what we found now.\n                 */\n                if (i === filteredSelectors.length - 1) {\n                    return filtered;\n                }\n                found = new Set(filtered);\n            }\n            else {\n                filtered.forEach(function (el) { return found.add(el); });\n            }\n        }\n    }\n    return typeof found !== \"undefined\"\n        ? (found.size === elements.length\n            ? elements\n            : // Filter elements to preserve order\n                elements.filter(function (el) {\n                    return found.has(el);\n                }))\n        : [];\n}\nfunction filterBySelector(selector, elements, options) {\n    var _a;\n    if (selector.some(css_what_1.isTraversal)) {\n        /*\n         * Get root node, run selector with the scope\n         * set to all of our nodes.\n         */\n        var root = (_a = options.root) !== null && _a !== void 0 ? _a : (0, helpers_js_1.getDocumentRoot)(elements[0]);\n        var opts = __assign(__assign({}, options), { context: elements, relativeSelector: false });\n        selector.push(SCOPE_PSEUDO);\n        return findFilterElements(root, selector, opts, true, elements.length);\n    }\n    // Performance optimization: If we don't have to traverse, just filter set.\n    return findFilterElements(elements, selector, options, false, elements.length);\n}\nfunction select(selector, root, options, limit) {\n    if (options === void 0) { options = {}; }\n    if (limit === void 0) { limit = Infinity; }\n    if (typeof selector === \"function\") {\n        return find(root, selector);\n    }\n    var _a = (0, helpers_js_1.groupSelectors)((0, css_what_1.parse)(selector)), plain = _a[0], filtered = _a[1];\n    var results = filtered.map(function (sel) {\n        return findFilterElements(root, sel, options, true, limit);\n    });\n    // Plain selectors can be queried in a single go\n    if (plain.length) {\n        results.push(findElements(root, plain, options, limit));\n    }\n    if (results.length === 0) {\n        return [];\n    }\n    // If there was only a single selector, just return the result\n    if (results.length === 1) {\n        return results[0];\n    }\n    // Sort results, filtering for duplicates\n    return DomUtils.uniqueSort(results.reduce(function (a, b) { return __spreadArray(__spreadArray([], a, true), b, true); }));\n}\nexports.select = select;\n/**\n *\n * @param root Element(s) to search from.\n * @param selector Selector to look for.\n * @param options Options for querying.\n * @param queryForSelector Query multiple levels deep for the initial selector, even if it doesn't contain a traversal.\n */\nfunction findFilterElements(root, selector, options, queryForSelector, totalLimit) {\n    var filterIndex = selector.findIndex(positionals_js_1.isFilter);\n    var sub = selector.slice(0, filterIndex);\n    var filter = selector[filterIndex];\n    // If we are at the end of the selector, we can limit the number of elements to retrieve.\n    var partLimit = selector.length - 1 === filterIndex ? totalLimit : Infinity;\n    /*\n     * Set the number of elements to retrieve.\n     * Eg. for :first, we only have to get a single element.\n     */\n    var limit = (0, positionals_js_1.getLimit)(filter.name, filter.data, partLimit);\n    if (limit === 0)\n        return [];\n    /*\n     * Skip `findElements` call if our selector starts with a positional\n     * pseudo.\n     */\n    var elemsNoLimit = sub.length === 0 && !Array.isArray(root)\n        ? DomUtils.getChildren(root).filter(DomUtils.isTag)\n        : sub.length === 0\n            ? (Array.isArray(root) ? root : [root]).filter(DomUtils.isTag)\n            : queryForSelector || sub.some(css_what_1.isTraversal)\n                ? findElements(root, [sub], options, limit)\n                : filterElements(root, [sub], options);\n    var elems = elemsNoLimit.slice(0, limit);\n    var result = filterByPosition(filter.name, elems, filter.data, options);\n    if (result.length === 0 || selector.length === filterIndex + 1) {\n        return result;\n    }\n    var remainingSelector = selector.slice(filterIndex + 1);\n    var remainingHasTraversal = remainingSelector.some(css_what_1.isTraversal);\n    if (remainingHasTraversal) {\n        if ((0, css_what_1.isTraversal)(remainingSelector[0])) {\n            var type = remainingSelector[0].type;\n            if (type === css_what_1.SelectorType.Sibling ||\n                type === css_what_1.SelectorType.Adjacent) {\n                // If we have a sibling traversal, we need to also look at the siblings.\n                result = (0, css_select_1.prepareContext)(result, DomUtils, true);\n            }\n            // Avoid a traversal-first selector error.\n            remainingSelector.unshift(UNIVERSAL_SELECTOR);\n        }\n        options = __assign(__assign({}, options), { \n            // Avoid absolutizing the selector\n            relativeSelector: false, \n            /*\n             * Add a custom root func, to make sure traversals don't match elements\n             * that aren't a part of the considered tree.\n             */\n            rootFunc: function (el) { return result.includes(el); } });\n    }\n    else if (options.rootFunc && options.rootFunc !== boolbase.trueFunc) {\n        options = __assign(__assign({}, options), { rootFunc: boolbase.trueFunc });\n    }\n    /*\n     * If we have another filter, recursively call `findFilterElements`,\n     * with the `recursive` flag disabled. We only have to look for more\n     * elements when we see a traversal.\n     *\n     * Otherwise,\n     */\n    return remainingSelector.some(positionals_js_1.isFilter)\n        ? findFilterElements(result, remainingSelector, options, false, totalLimit)\n        : remainingHasTraversal\n            ? // Query existing elements to resolve traversal.\n                findElements(result, [remainingSelector], options, totalLimit)\n            : // If we don't have any more traversals, simply filter elements.\n                filterElements(result, [remainingSelector], options);\n}\nfunction findElements(root, sel, options, limit) {\n    var query = (0, css_select_1._compileToken)(sel, options, root);\n    return find(root, query, limit);\n}\nfunction find(root, query, limit) {\n    if (limit === void 0) { limit = Infinity; }\n    var elems = (0, css_select_1.prepareContext)(root, DomUtils, query.shouldTestNextSiblings);\n    return DomUtils.find(function (node) { return DomUtils.isTag(node) && query(node); }, elems, true, limit);\n}\nfunction filterElements(elements, sel, options) {\n    var els = (Array.isArray(elements) ? elements : [elements]).filter(DomUtils.isTag);\n    if (els.length === 0)\n        return els;\n    var query = (0, css_select_1._compileToken)(sel, options);\n    return query === boolbase.trueFunc ? els : els.filter(query);\n}\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/cheerio-select/lib/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/cheerio-select/lib/positionals.js":
/*!********************************************************!*\
  !*** ./node_modules/cheerio-select/lib/positionals.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getLimit = exports.isFilter = exports.filterNames = void 0;\nexports.filterNames = new Set([\n    \"first\",\n    \"last\",\n    \"eq\",\n    \"gt\",\n    \"nth\",\n    \"lt\",\n    \"even\",\n    \"odd\",\n]);\nfunction isFilter(s) {\n    if (s.type !== \"pseudo\")\n        return false;\n    if (exports.filterNames.has(s.name))\n        return true;\n    if (s.name === \"not\" && Array.isArray(s.data)) {\n        // Only consider `:not` with embedded filters\n        return s.data.some(function (s) { return s.some(isFilter); });\n    }\n    return false;\n}\nexports.isFilter = isFilter;\nfunction getLimit(filter, data, partLimit) {\n    var num = data != null ? parseInt(data, 10) : NaN;\n    switch (filter) {\n        case \"first\":\n            return 1;\n        case \"nth\":\n        case \"eq\":\n            return isFinite(num) ? (num >= 0 ? num + 1 : Infinity) : 0;\n        case \"lt\":\n            return isFinite(num)\n                ? num >= 0\n                    ? Math.min(num, partLimit)\n                    : Infinity\n                : 0;\n        case \"gt\":\n            return isFinite(num) ? Infinity : 0;\n        case \"odd\":\n            return 2 * partLimit;\n        case \"even\":\n            return 2 * partLimit - 1;\n        case \"last\":\n        case \"not\":\n            return Infinity;\n    }\n}\nexports.getLimit = getLimit;\n//# sourceMappingURL=positionals.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvY2hlZXJpby1zZWxlY3QvbGliL3Bvc2l0aW9uYWxzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGdCQUFnQixHQUFHLGdCQUFnQixHQUFHLG1CQUFtQjtBQUN6RCxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQ0FBMEMsMEJBQTBCO0FBQ3BFO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQiIsInNvdXJjZXMiOlsiL2hvbWUvaW10aXlhei9EZXNrdG9wL1N1cGVyTGVhcm4vZnJvbnRlbmQvbm9kZV9tb2R1bGVzL2NoZWVyaW8tc2VsZWN0L2xpYi9wb3NpdGlvbmFscy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZ2V0TGltaXQgPSBleHBvcnRzLmlzRmlsdGVyID0gZXhwb3J0cy5maWx0ZXJOYW1lcyA9IHZvaWQgMDtcbmV4cG9ydHMuZmlsdGVyTmFtZXMgPSBuZXcgU2V0KFtcbiAgICBcImZpcnN0XCIsXG4gICAgXCJsYXN0XCIsXG4gICAgXCJlcVwiLFxuICAgIFwiZ3RcIixcbiAgICBcIm50aFwiLFxuICAgIFwibHRcIixcbiAgICBcImV2ZW5cIixcbiAgICBcIm9kZFwiLFxuXSk7XG5mdW5jdGlvbiBpc0ZpbHRlcihzKSB7XG4gICAgaWYgKHMudHlwZSAhPT0gXCJwc2V1ZG9cIilcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIGlmIChleHBvcnRzLmZpbHRlck5hbWVzLmhhcyhzLm5hbWUpKVxuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICBpZiAocy5uYW1lID09PSBcIm5vdFwiICYmIEFycmF5LmlzQXJyYXkocy5kYXRhKSkge1xuICAgICAgICAvLyBPbmx5IGNvbnNpZGVyIGA6bm90YCB3aXRoIGVtYmVkZGVkIGZpbHRlcnNcbiAgICAgICAgcmV0dXJuIHMuZGF0YS5zb21lKGZ1bmN0aW9uIChzKSB7IHJldHVybiBzLnNvbWUoaXNGaWx0ZXIpOyB9KTtcbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xufVxuZXhwb3J0cy5pc0ZpbHRlciA9IGlzRmlsdGVyO1xuZnVuY3Rpb24gZ2V0TGltaXQoZmlsdGVyLCBkYXRhLCBwYXJ0TGltaXQpIHtcbiAgICB2YXIgbnVtID0gZGF0YSAhPSBudWxsID8gcGFyc2VJbnQoZGF0YSwgMTApIDogTmFOO1xuICAgIHN3aXRjaCAoZmlsdGVyKSB7XG4gICAgICAgIGNhc2UgXCJmaXJzdFwiOlxuICAgICAgICAgICAgcmV0dXJuIDE7XG4gICAgICAgIGNhc2UgXCJudGhcIjpcbiAgICAgICAgY2FzZSBcImVxXCI6XG4gICAgICAgICAgICByZXR1cm4gaXNGaW5pdGUobnVtKSA/IChudW0gPj0gMCA/IG51bSArIDEgOiBJbmZpbml0eSkgOiAwO1xuICAgICAgICBjYXNlIFwibHRcIjpcbiAgICAgICAgICAgIHJldHVybiBpc0Zpbml0ZShudW0pXG4gICAgICAgICAgICAgICAgPyBudW0gPj0gMFxuICAgICAgICAgICAgICAgICAgICA/IE1hdGgubWluKG51bSwgcGFydExpbWl0KVxuICAgICAgICAgICAgICAgICAgICA6IEluZmluaXR5XG4gICAgICAgICAgICAgICAgOiAwO1xuICAgICAgICBjYXNlIFwiZ3RcIjpcbiAgICAgICAgICAgIHJldHVybiBpc0Zpbml0ZShudW0pID8gSW5maW5pdHkgOiAwO1xuICAgICAgICBjYXNlIFwib2RkXCI6XG4gICAgICAgICAgICByZXR1cm4gMiAqIHBhcnRMaW1pdDtcbiAgICAgICAgY2FzZSBcImV2ZW5cIjpcbiAgICAgICAgICAgIHJldHVybiAyICogcGFydExpbWl0IC0gMTtcbiAgICAgICAgY2FzZSBcImxhc3RcIjpcbiAgICAgICAgY2FzZSBcIm5vdFwiOlxuICAgICAgICAgICAgcmV0dXJuIEluZmluaXR5O1xuICAgIH1cbn1cbmV4cG9ydHMuZ2V0TGltaXQgPSBnZXRMaW1pdDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBvc2l0aW9uYWxzLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/cheerio-select/lib/positionals.js\n");

/***/ })

};
;